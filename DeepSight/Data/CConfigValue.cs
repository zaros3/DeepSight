using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DeepSight
{
	// 현재는 일부분만 사용하고 있음 ( Config.cs 대상 )
	// 특정 클래스에 ( m_objParameter ) string 변수명으로 해당 변수에 값을 읽고 쓸 수 있음
	// 지우면 또 검색하기 귀찮아서 남겨놓음
	public class CConfigValue
	{
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// private
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// 읽고 쓸 경로 저장 ini 클래스
		private ClassINI m_objINI;
		// 접근할 클래스 파라미터
		private object m_objParameter;
		// 색션
		private string m_strSection;

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 생성자
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public CConfigValue( ClassINI objINI, object objParameter, string strSection )
		{
			m_objINI = objINI;
			m_objParameter = objParameter;
			m_strSection = strSection;
		}

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 설정 값 읽음
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void LoadValue( string strVariableName )
		{
			var pValue = m_objParameter.GetType().GetField( strVariableName );
			object objValue = pValue.GetValue( m_objParameter );
			Type objType = objValue.GetType();
			if( typeof( int ) == objType ) {
				pValue.SetValue( m_objParameter, m_objINI.GetInt32( m_strSection, strVariableName, 0 ) );
			}
			else if( typeof( double ) == objType ) {
				pValue.SetValue( m_objParameter, m_objINI.GetDouble( m_strSection, strVariableName, 0.0 ) );
			}
			else if( typeof( bool ) == objType ) {
				pValue.SetValue( m_objParameter, m_objINI.GetBool( m_strSection, strVariableName, false ) );
			}
			else if( typeof( string ) == objType ) {
				pValue.SetValue( m_objParameter, m_objINI.GetString( m_strSection, strVariableName, "" ) );
			}
			// enum
			else {
				pValue.SetValue( m_objParameter, m_objINI.GetInt32( m_strSection, strVariableName, 0 ) );
			}
		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 설정 값 읽음 ( 디폴트 : int )
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void LoadValue( string strVariableName, int iDefaultValue )
		{
			var pValue = m_objParameter.GetType().GetField( strVariableName );
			pValue.SetValue( m_objParameter, m_objINI.GetInt32( m_strSection, strVariableName, iDefaultValue ) );
		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 설정 값 읽음 ( 디폴트 : double )
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void LoadValue( string strVariableName, double dDefaultValue )
		{
			var pValue = m_objParameter.GetType().GetField( strVariableName );
			pValue.SetValue( m_objParameter, m_objINI.GetDouble( m_strSection, strVariableName, dDefaultValue ) );
		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 설정 값 읽음 ( 디폴트 : string )
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void LoadValue( string strVariableName, string strDefaultValue )
		{
			var pValue = m_objParameter.GetType().GetField( strVariableName );
			pValue.SetValue( m_objParameter, m_objINI.GetString( m_strSection, strVariableName, strDefaultValue ) );
		}

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 설정 값 읽음 ( 디폴트 : bool )
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void LoadValue( string strVariableName, bool bDefaultValue )
		{
			var pValue = m_objParameter.GetType().GetField( strVariableName );
			pValue.SetValue( m_objParameter, m_objINI.GetBool( m_strSection, strVariableName, bDefaultValue ) );
		}

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 설정 값 작성
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void SaveValue( string strVariableName )
		{
			var pValue = m_objParameter.GetType().GetField( strVariableName );
			object objValue = pValue.GetValue( m_objParameter );
			Type objType = objValue.GetType();
			if( typeof( int ) == objType ) {
				m_objINI.WriteValue( m_strSection, strVariableName, ( int )objValue );
			}
			else if( typeof( double ) == objType ) {
				m_objINI.WriteValue( m_strSection, strVariableName, ( double )objValue );
			}
			else if( typeof( bool ) == objType ) {
				m_objINI.WriteValue( m_strSection, strVariableName, ( bool )objValue );
			}
			else if( typeof( string ) == objType ) {
				m_objINI.WriteValue( m_strSection, strVariableName, ( string )objValue );
			}
			// enum
			else {
				m_objINI.WriteValue( m_strSection, strVariableName, ( int )objValue );
			}
		}
	}
}