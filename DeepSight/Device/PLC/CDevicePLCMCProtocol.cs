using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace HLDevice.PLC
{
    public class CDevicePLCMCProtocol : HLDevice.Abstract.CDevicePLCAbstract
    {
        private HLDevice.Abstract.CDevicePLCAbstract.CMCProtocolError m_objError = new HLDevice.Abstract.CDevicePLCAbstract.CMCProtocolError();
        private HLDeviceDLL.MCProtocol.CDeviceMCProtocol m_objPLC = new HLDeviceDLL.MCProtocol.CDeviceMCProtocol();
        private Dictionary<string, CPLCParameter> m_objPLCParameter;


        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 : 생성자
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public CDevicePLCMCProtocol()
        {
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 : 버전정보
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override string HLGetVersion()
        {
            return m_objPLC.HLGetVersion();
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 : 초기화
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLInitialize( HLDevice.Abstract.CDevicePLCAbstract.CInitializeParameter objInitializeParameter )
        {
            bool bReturn = false;

            do
            {
                HLDeviceDLL.MCProtocol.CDeviceMCProtocolDefine.CInitializeParameter objParameter = new HLDeviceDLL.MCProtocol.CDeviceMCProtocolDefine.CInitializeParameter();
                objParameter.ePLCProtocolType = ( HLDeviceDLL.MCProtocol.CDeviceMCProtocolDefine.enumPLCProtocolType )objInitializeParameter.ePLCProtocolType;
                objParameter.strSocketIPAddress = objInitializeParameter.strSocketIPAddress;
                objParameter.iSocketPortNumber = objInitializeParameter.iSocketPortNumber;
                
                m_objPLCParameter = new Dictionary<string, CPLCParameter>( objInitializeParameter.objPLCParameter );


                if( false == m_objPLC.HLInitialize( objParameter ) ) 
                {
                    break;
                }
                 
                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 : 해제
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override void HLDeInitialize()
        {
            m_objPLC.HLDeInitialize();
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 : 접속 상태
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLIsConnected()
        {
            return m_objPLC.HLIsConnected();
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 : 1개의 비트데이터 읽기
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLReadBitFromPLC( string strName, ref bool bReadData, string strKey = "" )
        {
            bool bReturn = false;
            
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLReadBitFromPLC( strName, ref bReadData ) ) break;
                
                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 : 시작주소에서 설정된 사이즈만큼 읽어온다
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLReadBitFromPLC( string strName, int iCount, ref bool[] bReadData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == m_objPLC.HLReadBitFromPLC( strName, iCount, ref bReadData ) ) break;

                 bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLReadWordFromPLC( string strName, int iCount, ref short[] dReadData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == m_objPLC.HLReadWordFromPLC( strName, iCount, ref dReadData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLReadWordASCIIFromPLC( string strName, int iCount, ref string strReadData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLReadWordASCIIFromPLC( strName, iCount, ref strReadData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLReadDoubleWordFromPLC( string strName, ref double dReadData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLReadDoubleWordFromPLC( strName, ref dReadData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLReadDoubleWordFromPLC( string strName, int iCount, ref double[] dReadData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLReadDoubleWordFromPLC( strName, iCount, ref dReadData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLWriteBitFromPLC( string strName, bool bWriteData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLWriteBitFromPLC( strName, bWriteData ) ) break;
                
                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLWriteBitFromPLC( string strName, int iCount, bool[] bWriteData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLWriteBitFromPLC( strName, iCount, bWriteData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLWriteWordBitFromPLC( string strName, int iCount, bool[] bWriteData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLWriteWordBitFromPLC( strName, iCount, bWriteData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLWriteWordFromPLC(string strName, short sWriteData, string strKey = "")
        {
            bool bReturn = false;
            do
            {
                if( false == HLIsConnected() ) break;
                int iCount = 1;
                short[] sData = new short[iCount];
                sData[0] = sWriteData;
                if (false == m_objPLC.HLWriteWordFromPLC(strName, iCount, sData)) break;
                //if (false == m_objPLC.HLWriteWordFromPLC(strName, sWriteData)) break;

                bReturn = true;
            } while (false);

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLWriteWordFromPLC( string strName, int iCount, short[] sData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLWriteWordFromPLC( strName, iCount, sData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLWriteWordFromPLC( string strName, double dWriteData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLWriteWordFromPLC( strName, dWriteData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //수정 : 
        //목적 :
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override bool HLWriteWordFromPLC( string strName, int iCount, double[] dData, string strKey = "" )
        {
            bool bReturn = false;
            do {
                if( false == HLIsConnected() ) break;
                if( false == m_objPLC.HLWriteWordFromPLC( strName, iCount, dData ) ) break;

                bReturn = true;
            } while( false );

            return bReturn;
        }
    

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : DLL에서 나온 에러를 현재 클래스에 맞게 변환한다
        //설명 : 
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void MakeError()
        {
//             HLDeviceDLL.MCProtocol.CDeviceMCProtocol..CMCU32Error objError = m_objFFU.HLGetErrorCode();
//             m_objError.iReturnCode = objError.iReturnCode;
//             m_objError.strEventTime = objError.strEventTime;
//             m_objError.strFunctionName = objError.strFunctionName;
//             m_objError.strMessage = objError.strMessage;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 현재 알람 상태 정보를 리턴한다.
        //설명 : 
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public override HLDevice.Abstract.CDevicePLCAbstract.CMCProtocolError HLGetErrorCode()
        {
            return ( HLDevice.Abstract.CDevicePLCAbstract.CMCProtocolError )m_objError.Clone();
        }
        
    }
}
