using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace DeepSight
{
    public partial class CMainFrame : Form, CFormInterface
    {
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // private
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // 초기에 화면에 구성되는 폼
		private Form m_objTitle;
		private Form m_objView;
		private Form m_objMenu;
        // 현재 표시되고 있는 폼 정보를 갖고 있음
        private Form m_objCurrentForm;
		// 대기 다이얼로그
		private CDialogWait m_objDialogWait;
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // public
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// 로그인 다이얼로그 델리게이트
		public delegate void DelegateDialogLogin();
		// 대기 다이얼로그 델리게이트
		public delegate void DelegateWaitMessage( bool bShow, string message );
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 생성자
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public CMainFrame()
        {
            InitializeComponent();
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 폼 로드
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void CMainFrame_Load( object sender, EventArgs e )
        {
            // 초기화
            Initialize();
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 폼 종료
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void CMainFrame_FormClosed( object sender, FormClosedEventArgs e )
        {
            // 해제
            DeInitialize();
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 초기화
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public bool Initialize()
        {
            bool bReturn = false;

            do {
                var objMMFCamera = ENC.MemoryMap.Manager.CMMFManagerVisionData.Instance;
                // MAX 로 생성
                for( int iLoopCount = 0; iLoopCount < ( int )CDefine.enumCamera.CAMERA_FINAL; iLoopCount++ ) {
                    objMMFCamera[ iLoopCount ].bLive = false;
                    objMMFCamera[ iLoopCount ].bTrigger = false;
                    objMMFCamera[ iLoopCount ].bLightOn = false;
                }

                var pDocument = CDocument.GetDocument;
                if( false == pDocument.Initialize() ) {
                    throw new ArgumentException( "Fail to Initialize Document Class" );
                }

                pDocument.SetUpdateLog( CDefine.enumLogType.LOG_SYSTEM, "Program Start" );
                // 폼 초기화
                if( false == InitializeForm() ) break;

				CLoadingScreen.UpdateStatusTextWithStatus( 100, "Initialize Completed.", TypeOfMessage.Success );
				CLoadingScreen.CloseSplashScreen();
				pDocument.m_ThreadSplashWindow.Join();

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 해제
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void DeInitialize()
        {
            var pDocument = CDocument.GetDocument;
            pDocument.SetUpdateLog( CDefine.enumLogType.LOG_SYSTEM, "Program End" );
            pDocument.Deinitialize();
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 폼 초기화
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public bool InitializeForm()
        {
            bool bReturn = false;

            do {
                var pDocument = CDocument.GetDocument;
                m_objCurrentForm = this;
				// 대기 다이얼로그 생성
				m_objDialogWait = new CDialogWait();
                // 메인 폼 패널에 타이틀 / 몸통 / 메뉴 형식으로 붙인다.
                m_objTitle = new CFormTitle();
                m_objView = new CFormView();
                m_objMenu = new CFormMenu();
                CLoadingScreen.UpdateStatusTextWithStatus( CLoadingScreen.GetPrograssPoint() + 3, "CFormTitle Initialize....", TypeOfMessage.Warning );
                SetFormDockStyle( m_objTitle, this.panelTitle );
				CLoadingScreen.UpdateStatusTextWithStatus( CLoadingScreen.GetPrograssPoint() + 13, "CFormTitle Initialize Completed", TypeOfMessage.Success );
                Application.DoEvents();
                CLoadingScreen.UpdateStatusTextWithStatus( CLoadingScreen.GetPrograssPoint() + 13, "CFormView Initialize....", TypeOfMessage.Warning );
                SetFormDockStyle( m_objView, this.panelView );
				CLoadingScreen.UpdateStatusTextWithStatus( CLoadingScreen.GetPrograssPoint() + 7, "CFormView Initialize Completed", TypeOfMessage.Success );
                Application.DoEvents();
                SetFormDockStyle( m_objMenu, this.panelMenu );
				CLoadingScreen.UpdateStatusTextWithStatus( CLoadingScreen.GetPrograssPoint() + 3, "CFormMenu Initialize Completed", TypeOfMessage.Success );
                Application.DoEvents();

                CFormInterface objInterface = m_objTitle as CFormInterface;
                if( null != objInterface ) {
                    objInterface.SetChangeLanguage();
                    objInterface = null;
                }
                objInterface = m_objMenu as CFormInterface;
                if( null != objInterface ) {
                    objInterface.SetChangeLanguage();
                    objInterface = null;
                }

                this.Location = new Point( 0, 0 );
                this.StartPosition = FormStartPosition.Manual;

                bReturn = true;
            } while( false );

            return bReturn;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 폼 스타일 달라붙음
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void SetFormDockStyle( Form objForm, Panel objPanel )
        {
            objForm.Owner = this;
            objForm.TopLevel = false;
            objForm.Visible = true;
            objForm.Dock = DockStyle.Fill;
            objPanel.Controls.Add( objForm );
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 언어 변경
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public bool SetChangeLanguage()
        {
            return true;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 타이머 유무
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void SetTimer( bool bTimer )
        {
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : Visible 유무
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void SetVisible( bool bVisible )
        {
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : Title 포인터 넘김
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public Form GetFormTitle()
        {
            return m_objTitle;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : body 포인터 넘김
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public Form GetFormView()
        {
            return m_objView;
        }

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 대기 다이얼로그 호출
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		public void ShowWaitMessage( bool bShow, string strMessage = "" )
		{
			this.Invoke( new DelegateWaitMessage( WaitMessage ), new object[] { bShow, strMessage } );
		}

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//생성 : 
		//추가 : 
		//목적 : 대기 다이얼로그 보여주기.
		//설명 : 
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		private void WaitMessage( bool bShow, string strMessage = "" )
		{
			if( false == bShow ) {
				m_objDialogWait.Hide();
				// 정지 중일 경우 뷰 막자.
				m_objView.Enabled = true;
			}
			else {
				m_objDialogWait.Show();
				m_objDialogWait.SetText( strMessage );
				// 정지 중일 경우 뷰 막자.
				m_objView.Enabled = false;
			}
		}

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 로그인 다이얼로그 호출
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void ShowDialogLogin()
        {
            this.Invoke( new DelegateDialogLogin( DialogLogin ) );
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 로그인 다이얼로그 띄워줌
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void DialogLogin()
        {
            CDialogLogin objLogin = new CDialogLogin();
            objLogin.StartPosition = FormStartPosition.CenterScreen;
            objLogin.ShowDialog( this );
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 현재 폼 링크를 설정
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void SetCurrentForm( Form objForm )
        {
            do {
                if( m_objCurrentForm == objForm ) break;
                m_objCurrentForm = objForm;
            } while( false );
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : 현재 폼 링크를 반환
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public Form GetCurrentForm()
        {
            return m_objCurrentForm;
        }

        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //생성 : 
        //추가 : 
        //목적 : ALT + F4로 폼 종료되는거 막음
        //설명 : 
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void CMainFrame_FormClosing( object sender, FormClosingEventArgs e )
        {
            var pDocument = CDocument.GetDocument;
            if( false == pDocument.m_bProgramExit )
                e.Cancel = true;
            if( Keys.Alt == CDialogLogin.ModifierKeys || CDialogLogin.ModifierKeys == Keys.F4 ) {
                e.Cancel = true;
            }
        }
    }
}